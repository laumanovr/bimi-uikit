stages:
  - build
  - deploy
variables:
  GIT_STRATEGY: clone
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:app"
  IMAGE_TAG_STORYBOOK: "$CI_REGISTRY_IMAGE:storybook"
  DOCKERFILE_PATH: "ci/Dockerfile"
  DOCKERFILE_PATH_STORYBOOK: "ci/Dockerfile.storybook"

Build Storybook:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.5.0-debug
    entrypoint: [""]
  script:
    - echo "Logging into $CI_REGISTRY"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/$DOCKERFILE_PATH_STORYBOOK --destination $IMAGE_TAG_STORYBOOK --cache=true
  tags:
    - docker-dev
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "master"'

Deploy Storybook:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cd /opt/storybook
    - docker-compose pull
    - docker-compose up -d
  after_script:
    - docker logout $CI_REGISTRY
  tags:
    - mybimiboo-dev

Deploy NPM Package:
  stage: deploy
  image: node:16-buster-slim
  script:
    - yarn install
    - yarn build
    - mv package.json dist/
    - cd dist
    - echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - npm version --no-git-tag-version ${CI_COMMIT_TAG}
    - npm publish --userconfig=.npmrc
  tags:
    - docker-dev
  only:
    - tags
  cache:
    key: build-cache
    paths:
      - node_modules/
      - libs/
